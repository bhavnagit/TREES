class Solution {
    //recursion solution.......................................................................
    public boolean isSubtree(TreeNode root, TreeNode subRoot) {
        if(root == null) return subRoot == null;
    
    if(root.val == subRoot.val && isSametree(root,subRoot)){
        return true;
    }
    return isSubtree(root.left,subRoot) || isSubtree(root.right,subRoot);
}
    public boolean isSametree(TreeNode root, TreeNode subRoot){
        
        if(root == null){
            return subRoot == null;
        }
        if(subRoot == null){
            return false;
        }
        if(root.val != subRoot.val){
            return false;
        }
        return isSametree(root.left, subRoot.left) && isSametree(root.right,subRoot.right);
    }
}
//TIME AND SPACE COMPLEXITY - O(N)
